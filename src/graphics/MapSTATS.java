/* 
 * Political Map Project
 * Name: Robbie, Ethan, Nigel
 * Block: 7
 * 
 * Program Purpose:
 * 
 * Algorithm:
 * 
 * Future/possible improvements:
 *
 */
package graphics;

/**
 * ***************************** Imports *********************************
 */
import java.awt.Color;
import map.*;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.PLAIN_MESSAGE;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Rob
 */
public class MapSTATS extends javax.swing.JFrame {
    
    Selection select = new Selection();
    RegionBuilder build = new RegionBuilder();
    List<File> fileList = new ArrayList<>();
    List<Region> regionList = new ArrayList<>();
    
    public MapSTATS() {
        /**
         * ****************************** Variables **********************************
         */
        /**
         * **************************** Look and Feel ********************************
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            System.out.println("There was an error in identifying your operating system, so java look and feel will be used. " + e);
        }
        /**
         * **************************** User interface ********************************
         */
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawButton = new javax.swing.JButton();
        RegionList = new javax.swing.JComboBox<String>();
        jPanel1 = new javax.swing.JPanel();
        yearData = new javax.swing.JComboBox<String>();
        Menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        openMapData = new javax.swing.JMenuItem();
        saveImg = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exit = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        colorPalette = new javax.swing.JMenuItem();
        mapProjection = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MapSTATS");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("MapSTATS"); // NOI18N

        drawButton.setText("Analyze");
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });

        RegionList.setToolTipText("");
        RegionList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );

        yearData.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select a Year to map data", "1960", "1964", "1968", "1972", "1976", "1980", "1984", "1988", "1992", "1996", "2000", "2004", "2008", "2012" }));

        file.setText("File");

        openMapData.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        openMapData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/images/ic_folder.png"))); // NOI18N
        openMapData.setText("Open Map Data");
        openMapData.setToolTipText("Select the data directory to make a new map.");
        openMapData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMapDataActionPerformed(evt);
            }
        });
        file.add(openMapData);
        openMapData.getAccessibleContext().setAccessibleDescription("Allows user to select a folder to parse the data from.");

        saveImg.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/images/ic_save.png"))); // NOI18N
        saveImg.setText("Save image");
        saveImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveImgActionPerformed(evt);
            }
        });
        file.add(saveImg);
        file.add(jSeparator1);

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/images/ic_exit_to_app.png"))); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        Menu.add(file);

        viewMenu.setText("View");

        colorPalette.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/images/ic_color_lens.png"))); // NOI18N
        colorPalette.setText("Color Palette");
        colorPalette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorPaletteActionPerformed(evt);
            }
        });
        viewMenu.add(colorPalette);

        mapProjection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/images/ic_map.png"))); // NOI18N
        mapProjection.setText("Projection");
        mapProjection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapProjectionActionPerformed(evt);
            }
        });
        viewMenu.add(mapProjection);

        Menu.add(viewMenu);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegionList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(drawButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(yearData, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(RegionList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(drawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMapDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMapDataActionPerformed
        fileList = select.selectFolder();
        regionList = build.regionBuilder(fileList);
        for(int i = 0; i < regionList.size(); i++){
            try {
                RegionList.addItem(regionList.get(i).getRegionNameConv(regionList.get(i)));
            } catch (Exception e) {
                System.out.println(regionList.get(i).getRegionName(regionList.get(i)));
            }
        }
    }//GEN-LAST:event_openMapDataActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Exit the program?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void saveImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveImgActionPerformed
        System.out.println("Unsupported");
    }//GEN-LAST:event_saveImgActionPerformed

    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed
        int itemNumber = RegionList.getSelectedIndex();
        int yearNumber = yearData.getSelectedIndex();
            regionList.get(itemNumber).drawRegion(yearNumber);
    }//GEN-LAST:event_drawButtonActionPerformed

    private void colorPaletteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorPaletteActionPerformed
        /*String colorRepub = JOptionPane.showInputDialog("Choose a color for Republican votes."); 
        String colorDem = JOptionPane.showInputDialog("Choose a color for Democratic votes."); 
        String colorOther = JOptionPane.showInputDialog("Choose a color for Other votes.");
        */
        
        String title = "Color?";
        Object[] choices = {Color.red, Color.blue, Color.green, Color.yellow, Color.orange, Color.cyan, Color.black, Color.gray};

        //Choosing the Republican color. Default is red.
        Object defaultChoice = Color.red;
        Object repubChoice = JOptionPane.showInputDialog(null, "Choose a color for Republicans.", title, PLAIN_MESSAGE, null, choices, defaultChoice);
        
        //Choosing the Democratic color. Default is blue.
        defaultChoice = Color.blue;
        Object demChoice = JOptionPane.showInputDialog(null, "Choose a color for Democrats.", title, PLAIN_MESSAGE, null, choices, defaultChoice);
        
        //Choosing the Other color. Default is green.
        defaultChoice = Color.green;
        Object otherChoice = JOptionPane.showInputDialog(null, "Choose a color for Democrats.", title, PLAIN_MESSAGE, null, choices, defaultChoice);
        
        System.out.println("Unsupported.");
    }//GEN-LAST:event_colorPaletteActionPerformed

    private void mapProjectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapProjectionActionPerformed
        System.out.println("Unsupported.");
    }//GEN-LAST:event_mapProjectionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapSTATS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapSTATS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapSTATS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapSTATS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapSTATS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar Menu;
    private javax.swing.JComboBox<String> RegionList;
    private javax.swing.JMenuItem colorPalette;
    private javax.swing.JButton drawButton;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem mapProjection;
    private javax.swing.JMenuItem openMapData;
    private javax.swing.JMenuItem saveImg;
    private javax.swing.JMenu viewMenu;
    private javax.swing.JComboBox<String> yearData;
    // End of variables declaration//GEN-END:variables
}
